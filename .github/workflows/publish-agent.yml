name: 📦 Publish Agent Package

on:
  push:
    branches:
      - main
    paths:
      - 'packages/agent/**'
      - 'packages/shared/**'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Versão a ser publicada (ex: 1.0.0)'
        required: false
        type: string
      tag:
        description: 'Tag npm (latest, beta, next)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - next
          - alpha

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # Job 1: Build e testes
  build-and-test:
    name: Build & Test Agent Package
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necessário para changelog

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Instalar dependências
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build shared package
        run: pnpm --filter @nest-devtools/shared build

      - name: 🏗️ Build agent package
        run: pnpm --filter @nest-devtools/agent build

      - name: 🧪 Executar testes
        run: pnpm --filter @nest-devtools/agent test
        continue-on-error: true

      - name: 🔍 Type check
        run: pnpm --filter @nest-devtools/agent typecheck

      - name: 📏 Lint
        run: pnpm --filter @nest-devtools/agent lint
        continue-on-error: true

      - name: 💾 Salvar artefatos
        uses: actions/upload-artifact@v4
        with:
          name: agent-package
          path: |
            packages/agent/dist/
            packages/agent/package.json
            packages/agent/README.md
          retention-days: 7

  # Job 2: Publicar no npm
  publish-npm:
    name: Publish to npm
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: 📥 Instalar dependências
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build packages
        run: |
          pnpm --filter @nest-devtools/shared build
          pnpm --filter @nest-devtools/agent build

      - name: 📝 Atualizar versão (se especificada)
        if: github.event.inputs.version != ''
        run: |
          cd packages/agent
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          cd ../shared
          npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: 🚀 Publicar @nest-devtools/shared
        run: |
          cd packages/shared
          pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🚀 Publicar @nest-devtools/agent
        run: |
          cd packages/agent
          TAG="${{ github.event.inputs.tag || 'latest' }}"
          pnpm publish --access public --tag $TAG --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 📊 Informações da publicação
        run: |
          echo "✅ Pacotes publicados com sucesso!"
          echo "📦 @nest-devtools/agent"
          echo "📦 @nest-devtools/shared"
          echo "🏷️ Tag: ${{ github.event.inputs.tag || 'latest' }}"
          npm view @nest-devtools/agent versions --json

      - name: 💬 Comentar no PR (se aplicável)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ **Pacote publicado com sucesso!**\n\n📦 `@nest-devtools/agent`\n🏷️ Tag: `${{ github.event.inputs.tag || 'latest' }}`'
            })

  # Job 3: Publicar GitHub Release
  create-github-release:
    name: Create GitHub Release
    needs: publish-npm
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
    
    steps:
      - name: 📥 Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 Gerar changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/release-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Criar release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: ${{ github.event.inputs.tag != 'latest' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

